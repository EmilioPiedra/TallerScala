[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.7.3 (BellSoft Java 19.0.1)
[debug] Load.defaultLoad until apply took 69.5104ms
[debug]           Load.loadUnit: plugins took 78.3117ms
[debug]           Load.loadUnit: defsScala took 0.253ms
[debug] [Loading] Scanning directory C:\Users\SALA A\IdeaProjects\emilio_piedra\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\SALA A\IdeaProjects\emilio_piedra\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 14.2508 ms
[debug]               Load.resolveProject(emilio_piedra-build) took 38.8559ms
[debug]             Load.loadTransitive: finalizeProject(Project(id emilio_piedra-build, base: C:\Users\SALA A\IdeaProjects\emilio_piedra\project, plugins: List(<none>))) took 71.3822ms
[debug] [Loading] Done in C:\Users\SALA A\IdeaProjects\emilio_piedra\project, returning: (emilio_piedra-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 90.6803ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.1777ms
[debug]         Load.loadUnit(file:/C:/Users/SALA%20A/IdeaProjects/emilio_piedra/project/, ...) took 174.5345ms
[debug]       Load.apply: load took 658.4053ms
[debug]       Load.apply: resolveProjects took 4.0787ms
[debug]       Load.apply: finalTransforms took 53.3457ms
[debug]       Load.apply: config.delegates took 6.3046ms
[debug]       Load.apply: Def.make(settings)... took 313.452ms
[debug]       Load.apply: structureIndex took 75.3191ms
[debug]       Load.apply: mkStreams took 0.9542ms
[info] loading project definition from C:\Users\SALA A\IdeaProjects\emilio_piedra\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 9487.9068ms
[debug]     Load.loadUnit: defsScala took 0.0021ms
[debug] [Loading] Scanning directory C:\Users\SALA A\IdeaProjects\emilio_piedra
[debug]       Load.loadUnit: mkEval took 3.7914ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.3032 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 1.8769ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\SALA A\IdeaProjects\emilio_piedra, plugins: List(<none>))) took 3.9975ms
[debug] [Loading] Done in C:\Users\SALA A\IdeaProjects\emilio_piedra, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1776.1634ms
[debug]     Load.loadUnit: cleanEvalClasses took 14.099ms
[debug]   Load.loadUnit(file:/C:/Users/SALA%20A/IdeaProjects/emilio_piedra/, ...) took 11280.6911ms
[debug] Load.apply: load took 11301.2298ms
[debug] Load.apply: resolveProjects took 0.1074ms
[debug] Load.apply: finalTransforms took 6.1558ms
[debug] Load.apply: config.delegates took 0.2943ms
[debug] Load.apply: Def.make(settings)... took 64.5257ms
[debug] Load.apply: structureIndex took 19.0251ms
[debug] Load.apply: mkStreams took 0.0019ms
[info] set current project to emilio_piedra (in build file:/C:/Users/SALA%20A/IdeaProjects/emilio_piedra/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-ef9e9161224777d78442
[debug] Writing bsp connection file
[info] started sbt server
